plugins {
    id 'java'
    id 'eclipse'
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.0.1"
    id "com.github.johnrengelman.shadow" version "7.1.0"
}

group = 'it.buzz'
version = '1.1'

repositories {
    mavenCentral()

    maven { url = 'https://jitpack.io' }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

        // As of Gradle 5.1, you can limit this to only those
        // dependencies you expect from it
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }
}

dependencies {
    implementation("org.bstats:bstats-bukkit:3.0.2")
    implementation("org.bstats:bstats-bungeecord:3.0.2")
    implementation("org.bstats:bstats-velocity:3.0.2")

    implementation("ch.jalu:configme:1.3.0")
    implementation("com.github.ben-manes.caffeine:caffeine:3.1.8")

    compileOnly("net.kyori:adventure-api:4.17.0")
    implementation("net.kyori:adventure-platform-bukkit:4.3.3")
    implementation "net.kyori:adventure-platform-bungeecord:4.3.3"

    implementation 'com.github.Revxrsal.Lamp:common:3.2.1'
    implementation 'com.github.Revxrsal.Lamp:bukkit:3.2.1'
    implementation 'com.github.Revxrsal.Lamp:velocity:3.2.1'
    implementation 'com.github.Revxrsal.Lamp:bungee:3.2.1'

    compileOnly 'net.md-5:bungeecord-api:1.19-R0.1-SNAPSHOT'
    compileOnly 'org.spigotmc:spigot-api:1.20.2-R0.1-SNAPSHOT'

    compileOnly "com.velocitypowered:velocity-api:3.3.0-SNAPSHOT"
    annotationProcessor "com.velocitypowered:velocity-api:3.3.0-SNAPSHOT"

    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
}

compileJava { // Preserve parameter names in the bytecode
    options.compilerArgs += ["-parameters"]
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
    filesMatching('bungee.yml') {
        expand props
    }
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks {
    shadowJar {
        dependsOn(build)

        relocate "ch.jalu", "it.buzz.tahc.externals.configme"
        relocate "org.bstats", "it.buzz.tahc.externals.bstats"

        archiveFileName = project.name + "-" + project.version + ".jar"
    }
}

def templateSource = file('src/main/templates')
def templateDest = layout.buildDirectory.dir('generated/sources/templates')
def generateTemplates = tasks.register('generateTemplates', Copy) { task ->
    def props = [
            'version': project.version
    ]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

sourceSets.main.java.srcDir(generateTemplates.map { it.outputs })

rootProject.idea.project.settings.taskTriggers.afterSync generateTemplates
project.eclipse.synchronizationTasks(generateTemplates)
